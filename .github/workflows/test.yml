name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: "3.8,3.8,3.8,3.8,3.8,3.9"

    strategy:
      matrix:
        python-version: ["3.8", "3.8", "3.8", "3.8", "3.8", "3.9"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip wheel
          python -m pip install --upgrade tox codecov
      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"

      - name: "Upload coverage to Codecov"
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        uses: "codecov/codecov-action@v1"
        with:
          fail_ci_if_error: true

  lint:
    name: "Linting and Documentation"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        toxenv: ["black", "pep8py2", "pep8py3", "doc"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.8"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip wheel
          python -m pip install --upgrade tox
      - name: "Run tox targets for ${{ matrix.toxenv }}"
        run: "python -m tox -e ${{ matrix.toxenv }}"

