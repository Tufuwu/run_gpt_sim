name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.8', '3.8', '3.8', '3.8', '3.8']
        aio-available: [false, true]
        include:
          - python-version: '3.8'
            aio-available: true
          - python-version: '3.8'
            aio-available: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install pytest pytest-cov coveralls
          if [ "${{ matrix.aio-available }}" = "true" ]; then
            pip install pytest-asyncio
          fi
          pip install -e .

      - name: Run tests
        env:
          AIO_AVAILABLE: ${{ matrix.aio-available }}
          COVERAGERC: ${{ matrix.python-version == '3.8' && '.coveragerc-py2' || matrix.python-version == '3.8' && '.coveragerc-py38' || '.coveragerc' }}
        run: |
          pytest --cov-config $COVERAGERC --cov=pydispatch

      - name: Upload coverage to Coveralls
        if: success()
        run: coveralls --rcfile="$COVERAGERC"

  deploy:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -e .

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

